System testsag

//SAG -> CSS
Request 	storerequest		:		storerequest(FW)

//CSS -> SAG
Reply		loadaccepted		:		loadaccepted(arg)

//CSS -> SAG
Reply		loadrejected		:		loadrejected(arg)

//TT -> CSS
Dispatch	chargetakentt		:		chargetaken(arg)
 
//CSS -> TT
Dispatch	deposit				:		deposit(arg)

Context ctx_coldstorageservice ip [host="localhost" port=8020]

QActor coldstorageservice context ctx_coldstorageservice {
	
	State s0 initial {
		println("CSS: started") color blue
	}
	Goto waiting
	
	State waiting {
		
	}
	Transition t0 whenRequest storerequest -> handleRequest
					whenMsg chargetakentt -> finalizeDeposit
	
	State handleRequest {
		onMsg (storerequest : storerequest(FW)) {
			
			if [# false #] {
				forward transporttrolley -m deposit : deposit
				replyTo storerequest with loadaccepted : loadaccepted
				println("CSS: load accepted") color blue
			} else {
				replyTo storerequest with loadrejected : loadrejected
				println("CSS: load rejected") color blue
			}
		}	
	}
	Goto waiting
	
	State finalizeDeposit {
		println("CSS: charge taken") color blue
		updateResource [# "chargetaken" #] 
	}
	Goto waiting
}


QActor transporttrolley context ctx_coldstorageservice {
	
	State s0 initial {
		println("TT: started") color green
	}
	Goto waiting
	
	State waiting {
		
	}
	Transition t0 whenMsg deposit -> doDeposit
				  
	State doDeposit {
		delay 6000
		println("TT: charge taken") color green	
		forward coldstorageservice -m chargetakentt : chargetakentt
	}
	Goto waiting
	
	
}
