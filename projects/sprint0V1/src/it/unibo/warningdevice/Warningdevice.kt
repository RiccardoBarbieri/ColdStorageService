/* Generated by AN DISI Unibo */ 
package it.unibo.warningdevice

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Warningdevice ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t023",targetState="handleStatusChange",cond=whenEvent("statusupdate"))
				}	 
				state("handleStatusChange") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("statusupdate(POS,STATE)"), Term.createTerm("statusupdate(_,STATUS)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								if(  MState.valueOf(payloadArg(2)) == MState.HOME  
								 ){CommUtils.outblack("WarningDevice | LED SPENTO")
								}
								if(  MState.valueOf(payloadArg(2)) == MState.MOVING  
								 ){CommUtils.outblack("WarningDevice | LED LAMPEGGIANTE")
								}
								if(  MState.valueOf(payloadArg(2)) == MState.STOPPED  
								 ){CommUtils.outblack("WarningDevice | LED ACCESO")
								}
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
